{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\src\\\\components\\\\VideoDetail.js\";\nimport React from \"react\";\nimport Youtube from 'react-youtube';\nimport { useEffect, useState } from \"react/cjs/react.production.min\"; //const VideoDetail = ({ video }) => {\n\nfunction VideoDetail(_ref) {\n  var video = _ref.video;\n\n  if (!video) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Enter search keyword to load...\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels. With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.\"));\n  }\n  /*\r\n    const [player, setPlayer] = useState();\r\n      useEffect(() => {\r\n        var tag = document.createElement(\"script\");\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n        tag.setAttribute(\"onload\", \"onYouTubeIframeReady()\");\r\n        var firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    // var setPlayer;\r\n        window.onYouTubeIframeReady = function () {\r\n            setPlayer(\r\n                new window.YT.Player(\"player\", {\r\n                    videoId: \"sGPrx9bjgC8\",\r\n                    autoplay: true,\r\n                      events: {\r\n                        onReady: onPlayerReady\r\n                    }\r\n                })\r\n            );\r\n        };\r\n          function onPlayerReady(event) {\r\n            event.target.playVideo();\r\n        }\r\n    }, [video,setPlayer]);\r\n  */\n\n\n  var videoSrc = \"https://www.youtube.com/embed/\".concat(video.id.videoId);\n  var opts = {\n    height: 390,\n    width: 640,\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  function _onReady(event) {\n    event.target.pauseVideo();\n  }\n\n  function _getCurrentTime(event) {\n    var time = event.target.getCurrentTime();\n    console.log(\"The time is ::::: \" + time);\n  }\n\n  console.log(typeof video);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui embed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Youtube, {\n    className: \"youtube\",\n    videoId: video.id.videoId,\n    opts: opts,\n    onReady: _onReady,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: _getCurrentTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"fuddu button\")), React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, video.snippet.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, video.snippet.description)));\n}\n\n;\nexport default VideoDetail;","map":{"version":3,"sources":["C:\\Users\\babnishvyas\\Documents\\Work_Space\\fhl\\testyoutube\\Youtube-react-app\\src\\components\\VideoDetail.js"],"names":["React","Youtube","useEffect","useState","VideoDetail","video","fontSize","videoSrc","id","videoId","opts","height","width","playerVars","autoplay","_onReady","event","target","pauseVideo","_getCurrentTime","time","getCurrentTime","console","log","snippet","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,gCAAlC,C,CAEA;;AACA,SAASC,WAAT,OAA8B;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAC5B,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6YAHI,CAAP;AAUD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BE,MAAMC,QAAQ,2CAAoCF,KAAK,CAACG,EAAN,CAASC,OAA7C,CAAd;AACA,MAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF;AAHH,GAAb;;AAQA,WAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpBA,IAAAA,KAAK,CAACC,MAAN,CAAaC,UAAb;AACH;;AACD,WAASC,eAAT,CAAyBH,KAAzB,EAA+B;AAE3B,QAAII,IAAI,GAAGJ,KAAK,CAACC,MAAN,CAAaI,cAAb,EAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBH,IAAnC;AACH;;AACHE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOlB,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAG,SAArB;AAA+B,IAAA,OAAO,EAAEA,KAAK,CAACG,EAAN,CAASC,OAAjD;AAA0D,IAAA,IAAI,EAAEC,IAAhE;AAAsE,IAAA,OAAO,EAAEK,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Bd,KAAK,CAACmB,OAAN,CAAcC,KAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIpB,KAAK,CAACmB,OAAN,CAAcE,WAAlB,CAFF,CALF,CADF;AAYD;;AAAA;AAED,eAAetB,WAAf","sourcesContent":["import React from \"react\";\r\nimport Youtube from 'react-youtube';\r\nimport {useEffect, useState} from \"react/cjs/react.production.min\";\r\n\r\n//const VideoDetail = ({ video }) => {\r\nfunction VideoDetail({video}) {\r\n  if (!video) {\r\n    return <div>\r\n       <h1>Enter search keyword to load...</h1>\r\n       <br></br>\r\n       <p style={{fontSize:'25px'}}>\r\n       Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n       With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.        \r\n\r\n       </p>\r\n    </div>;\r\n  }\r\n\r\n  /*\r\n    const [player, setPlayer] = useState();\r\n\r\n    useEffect(() => {\r\n        var tag = document.createElement(\"script\");\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n        tag.setAttribute(\"onload\", \"onYouTubeIframeReady()\");\r\n        var firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    // var setPlayer;\r\n        window.onYouTubeIframeReady = function () {\r\n            setPlayer(\r\n                new window.YT.Player(\"player\", {\r\n                    videoId: \"sGPrx9bjgC8\",\r\n                    autoplay: true,\r\n\r\n                    events: {\r\n                        onReady: onPlayerReady\r\n                    }\r\n                })\r\n            );\r\n        };\r\n\r\n        function onPlayerReady(event) {\r\n            event.target.playVideo();\r\n        }\r\n    }, [video,setPlayer]);\r\n*/\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n    const opts = {\r\n        height: 390,\r\n        width: 640,\r\n        playerVars: {\r\n            autoplay: 1\r\n        },\r\n    };\r\n\r\n    function _onReady(event){\r\n        event.target.pauseVideo();\r\n    }\r\n    function _getCurrentTime(event){\r\n\r\n        let time = event.target.getCurrentTime();\r\n        console.log(\"The time is ::::: \" + time)\r\n    }\r\n  console.log(typeof video);\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n          <Youtube className = \"youtube\" videoId={video.id.videoId} opts={opts} onReady={_onReady} />\r\n          <button onClick={_getCurrentTime}>fuddu button</button>\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n"]},"metadata":{},"sourceType":"module"}