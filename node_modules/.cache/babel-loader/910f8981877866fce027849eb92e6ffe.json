{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\src\\\\components\\\\VideoDetail.js\";\nimport React from \"react\";\nimport Youtube from 'react-youtube';\nimport MContext from './ContextProvider';\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\nimport axios from \"axios\";\nvar endpoint = \"http://localhost:8080\";\nvar startNoteTime = \"\";\nvar ytplayer = null;\n\nvar VideoDetail = function VideoDetail(_ref) {\n  var video = _ref.video;\n\n  //function VideoDetail({video}) {\n  if (!video) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Enter search keyword to load...\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels. With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.\"));\n  } //const [ytplayer,setYtplayer] = useState(null);\n\n\n  var videoSrc = \"https://www.youtube.com/embed/\".concat(video.id.videoId);\n  var opts = {\n    height: 390,\n    width: 640,\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  function _onReady(event) {\n    startNoteTime = \"\";\n    var time = event.target.getCurrentTime();\n    console.log(\"The time is ::::: \" + time);\n    event.target.playVideo();\n    ytplayer = event.target;\n  }\n\n  var onPlayVideo = function onPlayVideo() {\n    ytplayer.playVideo();\n  };\n\n  function _getCurrentTime(event) {\n    var time = ytplayer.getCurrentTime();\n    var minutes = Math.floor(time / 60);\n    var seconds = time % 60;\n    console.log(\"Time::\" + minutes + \":\" + seconds);\n  }\n\n  function _seek(event) {\n    var time = document.getElementById(\"Note1\").innerText;\n    var minutes = parseInt(time.split(':')[0]);\n    var seconds = parseInt(time.split(':')[1]);\n\n    var _seconds = minutes * 60 + seconds;\n\n    console.log(_seconds);\n    ytplayer.seekTo(_seconds, true);\n  }\n\n  function _addNotes(event) {\n    var time = ytplayer.getCurrentTime();\n    var minutes = Math.floor(time / 60);\n    var seconds = time % 60;\n    var notesArea = document.getElementById(\"notes-area\").style.display = 'block';\n    startNoteTime = time;\n  }\n\n  var postDate =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              /*\r\n              const { id, time, note } = object\r\n              */\n\n              _context.next = 3;\n              return fetch(\"/addNote\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({})\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n\n              if (data.status != 200 || !data) {\n                console.log(\"ERROR!\");\n              } else {\n                console.log(\"Successful\");\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function postDate(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var addTodb =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(notesdata) {\n      var config, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  'Access-Control-Allow-Origin': '*'\n                }\n              };\n              _context2.next = 3;\n              return axios.post(endpoint + '/items', notesdata, config);\n\n            case 3:\n              response = _context2.sent;\n\n              if (response.status === 200 || response.status === 201) {\n                console.log(\"data added to db\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function addTodb(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var fetchNotes =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _ref5, data, status;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get(endpoint + '/items');\n\n            case 2:\n              _ref5 = _context3.sent;\n              data = _ref5.data;\n              status = _ref5.status;\n\n              if (status === 200) {} else {\n                console.log(\"ERROR in fetching\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function fetchNotes() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  function _saveNotes(_x3) {\n    return _saveNotes2.apply(this, arguments);\n  }\n\n  function _saveNotes2() {\n    _saveNotes2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(event) {\n      var notes, time, minutes, seconds, id, noteTime, notesdata, config, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              notes = document.getElementById(\"notes-area\").value;\n              time = ytplayer.getCurrentTime();\n              minutes = Math.floor(time / 60);\n              seconds = time % 60;\n              id = video.id.videoId;\n              console.log(id);\n              noteTime = startNoteTime - time;\n              notesdata = {\n                id: id,\n                starttime: startNoteTime,\n                duration: noteTime,\n                note: notes\n              }; //add to db here.......\n\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Access-Control-Allow-Origin\": \"*\"\n                }\n              };\n              _context4.next = 11;\n              return axios.post(endpoint + '/items', notesdata, config);\n\n            case 11:\n              response = _context4.sent;\n\n              if (response.status === 200 || response.status === 201) {\n                console.log(\"data added to db\");\n              }\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    return _saveNotes2.apply(this, arguments);\n  }\n\n  function handleOnChange(event) {\n    var savebutton = document.getElementById(\"savebutton\");\n    var notes = document.getElementById(\"notes-area\").value;\n\n    if (notes.value === '') {\n      //as now change is not happening it's not being called anymore\n      savebutton.style.display = 'none';\n    } else {\n      savebutton.style.display = 'block';\n    }\n  }\n\n  var player = null;\n  console.log(typeof video);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui embed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Youtube, {\n    className: \"youtube\",\n    videoId: video.id.videoId,\n    opts: opts,\n    onReady: _onReady,\n    onPause: _getCurrentTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: '1em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: _addNotes,\n    style: {\n      margin: '1em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"[AddNotes]\"), React.createElement(\"button\", {\n    id: \"savebutton\",\n    onClick: _saveNotes,\n    style: {\n      display: 'none',\n      margin: '1em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"SaveNotes\")), React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, video.snippet.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, video.snippet.description)), React.createElement(\"div\", {\n    className: \"search-bar ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"notes-area\",\n    onChange: handleOnChange,\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })));\n};\n\nexport default VideoDetail;\n/*\r\nclass VideoDetail extends React.Component{\r\n\r\n    if (this.props === null) {\r\n        render() {\r\n\r\n\r\n            return <div>\r\n                <h1>Enter search keyword to load...</h1>\r\n                <br></br>\r\n                <p style={{fontSize: '25px'}}>\r\n                    Use the API to search for videos matching specific search terms, topics, locations, publication dates,\r\n                    and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n                    With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to\r\n                    upload videos, manage playlists and subscriptions, update channel settings, and more.\r\n\r\n                </p>\r\n            </div>;\r\n        }\r\n    }\r\n    state = {\r\n        video: null,\r\n        ytplayer:null\r\n    }\r\n}\r\n*/","map":{"version":3,"sources":["C:\\Users\\babnishvyas\\Documents\\Work_Space\\fhl\\testyoutube\\Youtube-react-app\\src\\components\\VideoDetail.js"],"names":["React","Youtube","MContext","useEffect","useState","axios","endpoint","startNoteTime","ytplayer","VideoDetail","video","fontSize","videoSrc","id","videoId","opts","height","width","playerVars","autoplay","_onReady","event","time","target","getCurrentTime","console","log","playVideo","onPlayVideo","_getCurrentTime","minutes","Math","floor","seconds","_seek","document","getElementById","innerText","parseInt","split","_seconds","seekTo","_addNotes","notesArea","style","display","postDate","e","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","data","status","addTodb","notesdata","config","post","fetchNotes","get","_saveNotes","notes","value","noteTime","starttime","duration","note","handleOnChange","savebutton","player","marginTop","margin","snippet","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,gCAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,QAAQ,GAAG,IAAf;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACnC;AACE,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6YAHI,CAAP;AAUD,GAbgC,CAc/B;;;AAEA,MAAMC,QAAQ,2CAAoCF,KAAK,CAACG,EAAN,CAASC,OAA7C,CAAd;AACA,MAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF;AAHH,GAAb;;AAQA,WAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpBd,IAAAA,aAAa,GAAG,EAAhB;AACA,QAAIe,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,cAAb,EAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,IAAnC;AACAD,IAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb;AACAnB,IAAAA,QAAQ,GAAGa,KAAK,CAACE,MAAjB;AACH;;AACD,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBpB,IAAAA,QAAQ,CAACmB,SAAT;AACH,GAFD;;AAGA,WAASE,eAAT,CAAyBR,KAAzB,EAA+B;AAE3B,QAAIC,IAAI,GAAGd,QAAQ,CAACgB,cAAT,EAAX;AACA,QAAIM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAC,EAAhB,CAAd;AACA,QAAIW,OAAO,GAAGX,IAAI,GAAC,EAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWI,OAAX,GAAqB,GAArB,GAA2BG,OAAvC;AACH;;AACD,WAASC,KAAT,CAAeb,KAAf,EAAqB;AACjB,QAAIC,IAAI,GAAGa,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAA5C;AACA,QAAIP,OAAO,GAAGQ,QAAQ,CAAChB,IAAI,CAACiB,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAtB;AACA,QAAIN,OAAO,GAAGK,QAAQ,CAAChB,IAAI,CAACiB,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAtB;;AACA,QAAIC,QAAQ,GAAGV,OAAO,GAAC,EAAR,GAAaG,OAA5B;;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACAhC,IAAAA,QAAQ,CAACiC,MAAT,CAAgBD,QAAhB,EAA0B,IAA1B;AACH;;AACD,WAASE,SAAT,CAAmBrB,KAAnB,EAAyB;AACrB,QAAIC,IAAI,GAAGd,QAAQ,CAACgB,cAAT,EAAX;AACA,QAAIM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAC,EAAhB,CAAd;AACA,QAAIW,OAAO,GAAGX,IAAI,GAAC,EAAnB;AACA,QAAIqB,SAAS,GAAGR,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCQ,KAAtC,CAA4CC,OAA5C,GAAoD,OAApE;AACAtC,IAAAA,aAAa,GAAGe,IAAhB;AACH;;AACD,MAAMwB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,cAAAA,CAAC,CAACC,cAAF;AACA;;;;AAFa;AAAA,qBAKWC,KAAK,CAAC,UAAD,EAAY;AACpCC,gBAAAA,MAAM,EAAE,MAD4B;AAEpCC,gBAAAA,OAAO,EAAE;AACL,kCAAiB;AADZ,iBAF2B;AAKpCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAL8B,eAAZ,CALhB;;AAAA;AAKNC,cAAAA,QALM;AAAA;AAAA,qBAgBOA,QAAQ,CAACC,IAAT,EAhBP;;AAAA;AAgBNC,cAAAA,IAhBM;;AAkBZ,kBAAGA,IAAI,CAACC,MAAL,IAAe,GAAf,IAAsB,CAACD,IAA1B,EAA+B;AAC3BhC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,eAFD,MAEK;AACDD,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAtBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARoB,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAyBA,MAAMa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,MADQ,GACC;AACTV,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX;AAEL,iDAA+B;AAF1B;AADA,eADD;AAAA;AAAA,qBAOW9C,KAAK,CAACyD,IAAN,CAAWxD,QAAQ,GAAG,QAAtB,EAAgCsD,SAAhC,EAA2CC,MAA3C,CAPX;;AAAA;AAONN,cAAAA,QAPM;;AAQZ,kBAAGA,QAAQ,CAACG,MAAT,KAAoB,GAApB,IAA2BH,QAAQ,CAACG,MAAT,KAAkB,GAAhD,EAAoD;AAChDjC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPiC,OAAO;AAAA;AAAA;AAAA,KAAb;;AAYA,MAAMI,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACc1D,KAAK,CAAC2D,GAAN,CAAU1D,QAAQ,GAAG,QAArB,CADd;;AAAA;AAAA;AACRmD,cAAAA,IADQ,SACRA,IADQ;AACFC,cAAAA,MADE,SACFA,MADE;;AAEf,kBAAGA,MAAM,KAAK,GAAd,EAAkB,CAEjB,CAFD,MAEK;AACDjC,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVqC,UAAU;AAAA;AAAA;AAAA,KAAhB;;AA9F+B,WAsGhBE,UAtGgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAsG/B,kBAA0B5C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ6C,cAAAA,KADR,GACgB/B,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsC+B,KADtD;AAEQ7C,cAAAA,IAFR,GAEed,QAAQ,CAACgB,cAAT,EAFf;AAGQM,cAAAA,OAHR,GAGkBC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAC,EAAhB,CAHlB;AAIQW,cAAAA,OAJR,GAIkBX,IAAI,GAAC,EAJvB;AAKQT,cAAAA,EALR,GAKaH,KAAK,CAACG,EAAN,CAASC,OALtB;AAMIW,cAAAA,OAAO,CAACC,GAAR,CAAYb,EAAZ;AACMuD,cAAAA,QAPV,GAOqB7D,aAAa,GAAGe,IAPrC;AAQUsC,cAAAA,SARV,GAQsB;AACd/C,gBAAAA,EAAE,EAAGA,EADS;AAEdwD,gBAAAA,SAAS,EAAG9D,aAFE;AAGd+D,gBAAAA,QAAQ,EAAGF,QAHG;AAIdG,gBAAAA,IAAI,EAAGL;AAJO,eARtB,EAcI;;AACIL,cAAAA,MAfR,GAeiB;AACTV,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX;AAEL,iDAA+B;AAF1B;AADA,eAfjB;AAAA;AAAA,qBAqB2B9C,KAAK,CAACyD,IAAN,CAAWxD,QAAQ,GAAG,QAAtB,EAAgCsD,SAAhC,EAA2CC,MAA3C,CArB3B;;AAAA;AAqBUN,cAAAA,QArBV;;AAsBI,kBAAGA,QAAQ,CAACG,MAAT,KAAoB,GAApB,IAA2BH,QAAQ,CAACG,MAAT,KAAkB,GAAhD,EAAoD;AAChDjC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAxBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtG+B;AAAA;AAAA;;AAiI/B,WAAS8C,cAAT,CAAwBnD,KAAxB,EAA8B;AAC1B,QAAIoD,UAAU,GAAGtC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAjB;AACA,QAAI8B,KAAK,GAAG/B,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsC+B,KAAlD;;AACA,QAAGD,KAAK,CAACC,KAAN,KAAgB,EAAnB,EAAsB;AAClB;AACAM,MAAAA,UAAU,CAAC7B,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACH,KAHD,MAGK;AACD4B,MAAAA,UAAU,CAAC7B,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACH;AACJ;;AACD,MAAI6B,MAAM,GAAG,IAAb;AACFjD,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOhB,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAG,SAArB;AAA+B,IAAA,OAAO,EAAEA,KAAK,CAACG,EAAN,CAASC,OAAjD;AAA0D,IAAA,IAAI,EAAEC,IAAhE;AAAsE,IAAA,OAAO,EAAEK,QAA/E;AAAyF,IAAA,OAAO,EAAES,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,EAII;AAAK,IAAA,KAAK,EAAE;AAAC8C,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEjC,SAAjB;AAA4B,IAAA,KAAK,EAAE;AAACkC,MAAAA,MAAM,EAAC;AAAR,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,OAAO,EAAEX,UAAjC;AAA6C,IAAA,KAAK,EAAE;AAACpB,MAAAA,OAAO,EAAC,MAAT;AAAgB+B,MAAAA,MAAM,EAAC;AAAvB,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAJJ,EAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BlE,KAAK,CAACmE,OAAN,CAAcC,KAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIpE,KAAK,CAACmE,OAAN,CAAcE,WAAlB,CAFF,CARF,EAYI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,QAAQ,EAAEP,cAAjC;AAAiD,IAAA,KAAK,EAAE;AAAC3B,MAAAA,OAAO,EAAC;AAAT,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CADF;AAkBD,CA/JD;;AAiKA,eAAepC,WAAf;AAGA","sourcesContent":["import React from \"react\";\r\nimport Youtube from 'react-youtube';\r\nimport MContext from './ContextProvider'\r\nimport {useEffect, useState} from \"react/cjs/react.production.min\";\r\nimport axios from \"axios\";\r\nconst endpoint = \"http://localhost:8080\";\r\nlet startNoteTime = \"\";\r\nlet ytplayer = null;\r\nconst VideoDetail = ({ video }) => {\r\n//function VideoDetail({video}) {\r\n  if (!video) {\r\n    return <div>\r\n       <h1>Enter search keyword to load...</h1>\r\n       <br></br>\r\n       <p style={{fontSize:'25px'}}>\r\n       Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n       With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.        \r\n\r\n       </p>\r\n    </div>;\r\n  }\r\n    //const [ytplayer,setYtplayer] = useState(null);\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n    const opts = {\r\n        height: 390,\r\n        width: 640,\r\n        playerVars: {\r\n            autoplay: 1\r\n        },\r\n    };\r\n\r\n    function _onReady(event){\r\n        startNoteTime = \"\";\r\n        let time = event.target.getCurrentTime();\r\n        console.log(\"The time is ::::: \" + time);\r\n        event.target.playVideo();\r\n        ytplayer = event.target;\r\n    }\r\n    const onPlayVideo = () => {\r\n        ytplayer.playVideo();\r\n    }\r\n    function _getCurrentTime(event){\r\n\r\n        let time = ytplayer.getCurrentTime();\r\n        let minutes = Math.floor(time/60);\r\n        let seconds = time%60;\r\n        console.log(\"Time::\" + minutes + \":\" + seconds);\r\n    }\r\n    function _seek(event){\r\n        let time = document.getElementById(\"Note1\").innerText;\r\n        let minutes = parseInt(time.split(':')[0]);\r\n        let seconds = parseInt(time.split(':')[1]);\r\n        let _seconds = minutes*60 + seconds;\r\n        console.log(_seconds);\r\n        ytplayer.seekTo(_seconds, true);\r\n    }\r\n    function _addNotes(event){\r\n        let time = ytplayer.getCurrentTime();\r\n        let minutes = Math.floor(time/60);\r\n        let seconds = time%60;\r\n        let notesArea = document.getElementById(\"notes-area\").style.display='block'\r\n        startNoteTime = time;\r\n    }\r\n    const postDate = async (e) => {\r\n        e.preventDefault();\r\n        /*\r\n        const { id, time, note } = object\r\n        */\r\n         const response = await fetch(\"/addNote\",{\r\n             method: \"POST\",\r\n             headers: {\r\n                 \"Content-Type\" : \"application/json\"\r\n             },\r\n             body: JSON.stringify({\r\n                 //here values......\r\n             })\r\n\r\n         });\r\n\r\n         const data = await response.json();\r\n\r\n         if(data.status != 200 || !data){\r\n             console.log(\"ERROR!\");\r\n         }else{\r\n             console.log(\"Successful\");\r\n         }\r\n\r\n    }\r\n    const addTodb = async (notesdata) => {\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        const response = await axios.post(endpoint + '/items', notesdata, config);\r\n        if(response.status === 200 || response.status===201){\r\n            console.log(\"data added to db\");\r\n        }\r\n    }\r\n    const fetchNotes = async () => {\r\n        const {data, status} = await axios.get(endpoint + '/items');\r\n        if(status === 200){\r\n\r\n        }else{\r\n            console.log(\"ERROR in fetching\");\r\n        }\r\n    }\r\n    async function _saveNotes(event){\r\n        let notes = document.getElementById(\"notes-area\").value;\r\n        let time = ytplayer.getCurrentTime();\r\n        let minutes = Math.floor(time/60);\r\n        let seconds = time%60;\r\n        let id = video.id.videoId;\r\n        console.log(id);\r\n        const noteTime = startNoteTime - time;\r\n        const notesdata = {\r\n            id : id,\r\n            starttime : startNoteTime,\r\n            duration : noteTime,\r\n            note : notes\r\n        };\r\n        //add to db here.......\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        }\r\n        const response = await axios.post(endpoint + '/items', notesdata, config);\r\n        if(response.status === 200 || response.status===201){\r\n            console.log(\"data added to db\");\r\n        }\r\n\r\n    }\r\n    function handleOnChange(event){\r\n        let savebutton = document.getElementById(\"savebutton\");\r\n        let notes = document.getElementById(\"notes-area\").value;\r\n        if(notes.value === ''){\r\n            //as now change is not happening it's not being called anymore\r\n            savebutton.style.display = 'none';\r\n        }else{\r\n            savebutton.style.display = 'block';\r\n        }\r\n    }\r\n    let player = null;\r\n  console.log(typeof video);\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n          <Youtube className = \"youtube\" videoId={video.id.videoId} opts={opts} onReady={_onReady} onPause={_getCurrentTime} />\r\n      </div>\r\n        <div style={{marginTop: '1em'}}>\r\n            <button onClick={_addNotes} style={{margin:'1em'}}>[AddNotes]</button>\r\n            <button id=\"savebutton\" onClick={_saveNotes} style={{display:'none',margin:'1em'}}>SaveNotes</button>\r\n        </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n        <div className='search-bar ui segment'>\r\n            <input id=\"notes-area\" onChange={handleOnChange} style={{display:'none'}}/>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n\r\n\r\n/*\r\nclass VideoDetail extends React.Component{\r\n\r\n    if (this.props === null) {\r\n        render() {\r\n\r\n\r\n            return <div>\r\n                <h1>Enter search keyword to load...</h1>\r\n                <br></br>\r\n                <p style={{fontSize: '25px'}}>\r\n                    Use the API to search for videos matching specific search terms, topics, locations, publication dates,\r\n                    and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n                    With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to\r\n                    upload videos, manage playlists and subscriptions, update channel settings, and more.\r\n\r\n                </p>\r\n            </div>;\r\n        }\r\n    }\r\n    state = {\r\n        video: null,\r\n        ytplayer:null\r\n    }\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}