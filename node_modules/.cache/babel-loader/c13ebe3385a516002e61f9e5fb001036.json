{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport SearchBar from './Searchbar';\nimport youtube from '../apis/youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport NotesComponent from \"./NotesComponent\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      videos: [],\n      selectedVideo: null,\n      opts: null\n      /*\r\n      componentDidMount() {\r\n          /*\r\n          var tag = document.createElement(\"script\");\r\n          tag.src = \"https://www.youtube.com/iframe_api\";\r\n          tag.setAttribute(\"onload\", \"onYouTubeIframeReady()\");\r\n          var firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n          // var setPlayer;\r\n          tag.onload = setupPlayer;\r\n          */\n\n      /*\r\n      console.log(\"Component did mount\");\r\n      this.loadVideo();\r\n      }\r\n      loadVideo = () => {\r\n      let localplayer = null;\r\n      console.info(`loadVideo called`);\r\n        (function loadYoutubeIFrameApiScript() {\r\n          const tag = document.createElement(\"script\");\r\n          tag.src = \"https://www.youtube.com/iframe_api\";\r\n            const firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n          tag.onload = setupPlayer;\r\n      })();\r\n          function setupPlayer() {\r\n          window.YT.ready(function() {\r\n              localplayer = new window.YT.Player(\"player\", {\r\n                  height: \"390\",\r\n                  width: \"640\",\r\n                  videoId: \"M7lc1UVf-VE\",\r\n                  events: {\r\n                      onReady: onPlayerReady,\r\n                      onStateChange: onPlayerStateChange\r\n                  }\r\n              });\r\n                if(localplayer===null) {\r\n                  console.log(\"localplayer is null;;;\");\r\n              }else{\r\n                  console.log(\"Here it has a value\");\r\n              }\r\n              if(localplayer!=null){\r\n                  this.setState({player:localplayer});\r\n              }\r\n              });\r\n            if(localplayer!=null) {\r\n              console.log(localplayer.toString());\r\n          }else{\r\n              console.log(\"why is local player null!\");\r\n          }\r\n          console.log(this.toString());\r\n            this.setState({\r\n                  player: localplayer\r\n              }\r\n          );\r\n      }\r\n        this.setState({\r\n              player: localplayer\r\n          }\r\n      );\r\n        function getTime(){\r\n          let time = this.state.player.getCurrentTime();\r\n          console.log(\"time is\" + time);\r\n      }\r\n        function onPlayerReady(event) {\r\n          event.target.playVideo();\r\n      }\r\n        function onPlayerStateChange(event) {\r\n          var videoStatuses = Object.entries(window.YT.PlayerState);\r\n          console.log(videoStatuses.find(status => status[1] === event.data)[0]);\r\n      }\r\n      }\r\n      */\n\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(termFromSearchBar) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return youtube.get('/search', {\n                  params: {\n                    q: termFromSearchBar\n                  }\n                });\n\n              case 2:\n                response = _context.sent;\n\n                _this.setState({\n                  videos: response.data.items\n                });\n\n                console.log(\"this is resp\", response);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleVideoSelect = function (video) {\n      var _opts = {\n        height: 390,\n        width: 640,\n        playerVars: {\n          autoplay: 1\n        }\n      };\n\n      _this.setState({\n        selectedVideo: video\n      });\n\n      _this.setState({\n        opts: _opts\n      });\n    };\n\n    _this.addNotes = function (event) {\n      /*\r\n      if (this.state.player === null){\r\n          console.log(\"WTF buddy!\");\r\n          return;\r\n      }\r\n      console.log(\"AddComponent::addNotes\");\r\n      var time = this.state.player.getCurrentTime();\r\n      console.log(\"time is:::\"+ time)\r\n      */\n      var x = document.getElementsByClassName('youtube');\n      var time = x.getCurrentTime();\n      console.log(time); //console.log(x);\n    };\n\n    _this._onReady = function (event) {\n      //player = event.target;\n      event.target.pauseVideo();\n    };\n\n    _this._getCurrentTime = function (event) {\n      var time = event.target.getCurrentTime();\n      console.log(\"Time in App component::::\" + time);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ui container\",\n        style: {\n          marginTop: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        handleFormSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ui grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"eleven wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui embed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Youtube, {\n        className: \"youtube\",\n        videoId: this.state.selectedVideo.id.videoId,\n        opts: opts,\n        onReady: this._onReady,\n        onPause: this._getCurrentTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"ui header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, video.snippet.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, video.snippet.description))), React.createElement(\"div\", {\n        className: \"five wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(VideoList, {\n        handleVideoSelect: this.handleVideoSelect,\n        videos: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"ui container\",\n        style: {\n          marginTop: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(NotesComponent, {\n        addNotes: this.addNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\babnishvyas\\Documents\\Work_Space\\fhl\\testyoutube\\Youtube-react-app\\src\\components\\App.js"],"names":["React","SearchBar","youtube","VideoList","VideoDetail","NotesComponent","App","state","videos","selectedVideo","opts","handleSubmit","termFromSearchBar","get","params","q","response","setState","data","items","console","log","handleVideoSelect","video","_opts","height","width","playerVars","autoplay","addNotes","event","x","document","getElementsByClassName","time","getCurrentTime","_onReady","target","pauseVideo","_getCurrentTime","marginTop","id","videoId","snippet","title","description","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,G;;;;;;;;;;;;;;;;;UAKFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,aAAa,EAAE,IAFX;AAGJC,MAAAA,IAAI,EAAE;AAEV;;;;;;;;;;;;AAWI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhBI,K;;UA+FRC,Y;;;;;+BAAe,iBAAOC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYV,OAAO,CAACW,GAAR,CAAY,SAAZ,EAAuB;AAC1CC,kBAAAA,MAAM,EAAE;AACJC,oBAAAA,CAAC,EAAEH;AADC;AADkC,iBAAvB,CADZ;;AAAA;AACLI,gBAAAA,QADK;;AAOX,sBAAKC,QAAL,CAAc;AACVT,kBAAAA,MAAM,EAAEQ,QAAQ,CAACE,IAAT,CAAcC;AADZ,iBAAd;;AAGAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BL,QAA3B;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAYfM,iB,GAAoB,UAACC,KAAD,EAAW;AAC3B,UAAMC,KAAK,GAAG;AACVC,QAAAA,MAAM,EAAE,GADE;AAEVC,QAAAA,KAAK,EAAE,GAFG;AAGVC,QAAAA,UAAU,EAAE;AACRC,UAAAA,QAAQ,EAAE;AADF;AAHF,OAAd;;AAOA,YAAKX,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAEc;AAAhB,OAAd;;AACA,YAAKN,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEc;AAAP,OAAd;AACH,K;;UACDK,Q,GAAW,UAACC,KAAD,EAAW;AAClB;;;;;;;;;AASA,UAAIC,CAAC,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,CAAR;AACA,UAAIC,IAAI,GAAGH,CAAC,CAACI,cAAF,EAAX;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ,EAZkB,CAalB;AAIH,K;;UACDE,Q,GAAW,UAACN,KAAD,EAAW;AAClB;AACAA,MAAAA,KAAK,CAACO,MAAN,CAAaC,UAAb;AACH,K;;UAEDC,e,GAAkB,UAACT,KAAD,EAAU;AACxB,UAAII,IAAI,GAAGJ,KAAK,CAACO,MAAN,CAAaF,cAAb,EAAX;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4Ba,IAAxC;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAACM,UAAAA,SAAS,EAAE;AAAZ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,gBAAgB,EAAE,KAAK7B,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAG,SAArB;AAA+B,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWE,aAAX,CAAyBgC,EAAzB,CAA4BC,OAApE;AAA6E,QAAA,IAAI,EAAEhC,IAAnF;AAAyF,QAAA,OAAO,EAAE,KAAK0B,QAAvG;AAAiH,QAAA,OAAO,EAAE,KAAKG,eAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BhB,KAAK,CAACoB,OAAN,CAAcC,KAAzC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIrB,KAAK,CAACoB,OAAN,CAAcE,WAAlB,CAFJ,CAJJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,iBAAiB,EAAE,KAAKvB,iBAAnC;AAAsD,QAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,CADJ,CAFJ,EAmBI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAACgC,UAAAA,SAAS,EAAE;AAAZ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKX,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAnBJ,CADJ;AAyBH;;;;EAjLa7B,KAAK,CAAC8C,S;;AAoLxB,eAAexC,GAAf","sourcesContent":["import React from 'react';\r\nimport SearchBar from './Searchbar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport NotesComponent from \"./NotesComponent\";\r\n\r\nclass App extends React.Component {\r\n\r\n    // const tag = document.createElement(\"script\");\r\n    // tag.src = \"https:www.youtube.com/iframe_api\";\r\n\r\n    state = {\r\n        videos: [],\r\n        selectedVideo: null,\r\n        opts: null\r\n    }\r\n    /*\r\n    componentDidMount() {\r\n        /*\r\n        var tag = document.createElement(\"script\");\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n        tag.setAttribute(\"onload\", \"onYouTubeIframeReady()\");\r\n        var firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        // var setPlayer;\r\n        tag.onload = setupPlayer;\r\n        */\r\n        /*\r\n        console.log(\"Component did mount\");\r\n        this.loadVideo();\r\n\r\n    }\r\n\r\n    loadVideo = () => {\r\n        let localplayer = null;\r\n        console.info(`loadVideo called`);\r\n\r\n        (function loadYoutubeIFrameApiScript() {\r\n            const tag = document.createElement(\"script\");\r\n            tag.src = \"https://www.youtube.com/iframe_api\";\r\n\r\n            const firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n            tag.onload = setupPlayer;\r\n        })();\r\n\r\n\r\n        function setupPlayer() {\r\n            window.YT.ready(function() {\r\n                localplayer = new window.YT.Player(\"player\", {\r\n                    height: \"390\",\r\n                    width: \"640\",\r\n                    videoId: \"M7lc1UVf-VE\",\r\n                    events: {\r\n                        onReady: onPlayerReady,\r\n                        onStateChange: onPlayerStateChange\r\n                    }\r\n                });\r\n\r\n                if(localplayer===null) {\r\n                    console.log(\"localplayer is null;;;\");\r\n                }else{\r\n                    console.log(\"Here it has a value\");\r\n                }\r\n                if(localplayer!=null){\r\n                    this.setState({player:localplayer});\r\n                }\r\n\r\n\r\n            });\r\n\r\n            if(localplayer!=null) {\r\n                console.log(localplayer.toString());\r\n            }else{\r\n                console.log(\"why is local player null!\");\r\n            }\r\n            console.log(this.toString());\r\n\r\n            this.setState({\r\n                    player: localplayer\r\n                }\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n                player: localplayer\r\n            }\r\n        );\r\n\r\n        function getTime(){\r\n            let time = this.state.player.getCurrentTime();\r\n            console.log(\"time is\" + time);\r\n        }\r\n\r\n        function onPlayerReady(event) {\r\n            event.target.playVideo();\r\n        }\r\n\r\n        function onPlayerStateChange(event) {\r\n            var videoStatuses = Object.entries(window.YT.PlayerState);\r\n            console.log(videoStatuses.find(status => status[1] === event.data)[0]);\r\n        }\r\n    }\r\n\r\n    */\r\n\r\n    handleSubmit = async (termFromSearchBar) => {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: termFromSearchBar\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            videos: response.data.items\r\n        })\r\n        console.log(\"this is resp\",response);\r\n    };\r\n    handleVideoSelect = (video) => {\r\n        const _opts = {\r\n            height: 390,\r\n            width: 640,\r\n            playerVars: {\r\n                autoplay: 1\r\n            },\r\n        };\r\n        this.setState({selectedVideo: video})\r\n        this.setState({opts: _opts})\r\n    }\r\n    addNotes = (event) => {\r\n        /*\r\n        if (this.state.player === null){\r\n            console.log(\"WTF buddy!\");\r\n            return;\r\n        }\r\n        console.log(\"AddComponent::addNotes\");\r\n        var time = this.state.player.getCurrentTime();\r\n        console.log(\"time is:::\"+ time)\r\n    */\r\n        var x = document.getElementsByClassName('youtube');\r\n        let time = x.getCurrentTime();\r\n        console.log(time);\r\n        //console.log(x);\r\n\r\n\r\n\r\n    }\r\n    _onReady = (event) => {\r\n        //player = event.target;\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n    _getCurrentTime = (event) =>{\r\n        var time = event.target.getCurrentTime();\r\n        console.log(\"Time in App component::::\"+time);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ui container' style={{marginTop: '1em'}}>\r\n                <SearchBar handleFormSubmit={this.handleSubmit}/>\r\n                <div className='ui grid'>\r\n                    <div className=\"ui row\">\r\n                        <div className=\"eleven wide column\">\r\n                            <div className=\"ui embed\">\r\n                                <Youtube className = \"youtube\" videoId={this.state.selectedVideo.id.videoId} opts={opts} onReady={this._onReady} onPause={this._getCurrentTime} />\r\n                            </div>\r\n                            <div className=\"ui segment\">\r\n                                <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n                                <p>{video.snippet.description}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                            <VideoList handleVideoSelect={this.handleVideoSelect} videos={this.state.videos}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui container' style={{marginTop: '1em'}}>\r\n                    <NotesComponent addNotes={this.addNotes}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}