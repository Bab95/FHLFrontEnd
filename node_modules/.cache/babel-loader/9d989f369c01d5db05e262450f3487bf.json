{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\src\\\\components\\\\VideoDetail.js\";\nimport React from \"react\";\nimport Youtube from 'react-youtube';\nimport MContext from './ContextProvider';\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\n\nvar VideoDetail = function VideoDetail(_ref) {\n  var video = _ref.video;\n\n  //function VideoDetail({video}) {\n  if (!video) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Enter search keyword to load...\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels. With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.\"));\n  } //const [ytplayer,setYtplayer] = useState(null);\n\n\n  var ytplayer = null;\n  var videoSrc = \"https://www.youtube.com/embed/\".concat(video.id.videoId);\n  var opts = {\n    height: 390,\n    width: 640,\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  function _onReady(event) {\n    var time = event.target.getCurrentTime();\n    console.log(\"The time is ::::: \" + time);\n    event.target.pauseVideo();\n    ytplayer = event.target;\n  }\n\n  var onPlayVideo = function onPlayVideo() {\n    ytplayer.playVideo();\n  };\n\n  function _getCurrentTime(event) {\n    var time = ytplayer.getCurrentTime();\n    var minutes = Math.floor(time / 60);\n    var seconds = time % 60;\n    console.log(\"Time::\" + minutes + \":\" + seconds);\n  }\n\n  var player = null;\n  console.log(typeof video);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui embed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Youtube, {\n    className: \"youtube\",\n    videoId: video.id.videoId,\n    opts: opts,\n    onReady: _onReady,\n    onPause: _getCurrentTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: '1em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: _getCurrentTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"[AddNotes]\")), React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, video.snippet.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, video.snippet.description)));\n};\n\nexport default VideoDetail;\n/*\r\nclass VideoDetail extends React.Component{\r\n\r\n    if (this.props === null) {\r\n        render() {\r\n\r\n\r\n            return <div>\r\n                <h1>Enter search keyword to load...</h1>\r\n                <br></br>\r\n                <p style={{fontSize: '25px'}}>\r\n                    Use the API to search for videos matching specific search terms, topics, locations, publication dates,\r\n                    and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n                    With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to\r\n                    upload videos, manage playlists and subscriptions, update channel settings, and more.\r\n\r\n                </p>\r\n            </div>;\r\n        }\r\n    }\r\n    state = {\r\n        video: null,\r\n        ytplayer:null\r\n    }\r\n}\r\n*/","map":{"version":3,"sources":["C:\\Users\\babnishvyas\\Documents\\Work_Space\\fhl\\testyoutube\\Youtube-react-app\\src\\components\\VideoDetail.js"],"names":["React","Youtube","MContext","useEffect","useState","VideoDetail","video","fontSize","ytplayer","videoSrc","id","videoId","opts","height","width","playerVars","autoplay","_onReady","event","time","target","getCurrentTime","console","log","pauseVideo","onPlayVideo","playVideo","_getCurrentTime","minutes","Math","floor","seconds","player","marginTop","snippet","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,gCAAlC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAEnC;AACE,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6YAHI,CAAP;AAUD,GAdgC,CAe/B;;;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAMC,QAAQ,2CAAoCH,KAAK,CAACI,EAAN,CAASC,OAA7C,CAAd;AACA,MAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF;AAHH,GAAb;;AAQA,WAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEpB,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,cAAb,EAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBJ,IAAnC;AACAD,IAAAA,KAAK,CAACE,MAAN,CAAaI,UAAb;AACAhB,IAAAA,QAAQ,GAAGU,KAAK,CAACE,MAAjB;AACH;;AACD,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBjB,IAAAA,QAAQ,CAACkB,SAAT;AACH,GAFD;;AAGA,WAASC,eAAT,CAAyBT,KAAzB,EAA+B;AAE3B,QAAIC,IAAI,GAAGX,QAAQ,CAACa,cAAT,EAAX;AACA,QAAIO,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWX,IAAI,GAAC,EAAhB,CAAd;AACA,QAAIY,OAAO,GAAGZ,IAAI,GAAC,EAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWK,OAAX,GAAqB,GAArB,GAA2BG,OAAvC;AACH;;AAED,MAAIC,MAAM,GAAG,IAAb;AACFV,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOjB,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAG,SAArB;AAA+B,IAAA,OAAO,EAAEA,KAAK,CAACI,EAAN,CAASC,OAAjD;AAA0D,IAAA,IAAI,EAAEC,IAAhE;AAAsE,IAAA,OAAO,EAAEK,QAA/E;AAAyF,IAAA,OAAO,EAAEU,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,EAII;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEN,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAJJ,EAOE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BrB,KAAK,CAAC4B,OAAN,CAAcC,KAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI7B,KAAK,CAAC4B,OAAN,CAAcE,WAAlB,CAFF,CAPF,CADF;AAcD,CA5DD;;AA8DA,eAAe/B,WAAf;AAGA","sourcesContent":["import React from \"react\";\r\nimport Youtube from 'react-youtube';\r\nimport MContext from './ContextProvider'\r\nimport {useEffect, useState} from \"react/cjs/react.production.min\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n\r\n//function VideoDetail({video}) {\r\n  if (!video) {\r\n    return <div>\r\n       <h1>Enter search keyword to load...</h1>\r\n       <br></br>\r\n       <p style={{fontSize:'25px'}}>\r\n       Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n       With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.        \r\n\r\n       </p>\r\n    </div>;\r\n  }\r\n    //const [ytplayer,setYtplayer] = useState(null);\r\n    let ytplayer = null;\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n    const opts = {\r\n        height: 390,\r\n        width: 640,\r\n        playerVars: {\r\n            autoplay: 1\r\n        },\r\n    };\r\n\r\n    function _onReady(event){\r\n\r\n        let time = event.target.getCurrentTime();\r\n        console.log(\"The time is ::::: \" + time);\r\n        event.target.pauseVideo();\r\n        ytplayer = event.target;\r\n    }\r\n    const onPlayVideo = () => {\r\n        ytplayer.playVideo();\r\n    }\r\n    function _getCurrentTime(event){\r\n\r\n        let time = ytplayer.getCurrentTime();\r\n        let minutes = Math.floor(time/60);\r\n        let seconds = time%60;\r\n        console.log(\"Time::\" + minutes + \":\" + seconds);\r\n    }\r\n\r\n    let player = null;\r\n  console.log(typeof video);\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n          <Youtube className = \"youtube\" videoId={video.id.videoId} opts={opts} onReady={_onReady} onPause={_getCurrentTime} />\r\n      </div>\r\n        <div style={{marginTop: '1em'}}>\r\n            <button onClick={_getCurrentTime}>[AddNotes]</button>\r\n        </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n\r\n\r\n/*\r\nclass VideoDetail extends React.Component{\r\n\r\n    if (this.props === null) {\r\n        render() {\r\n\r\n\r\n            return <div>\r\n                <h1>Enter search keyword to load...</h1>\r\n                <br></br>\r\n                <p style={{fontSize: '25px'}}>\r\n                    Use the API to search for videos matching specific search terms, topics, locations, publication dates,\r\n                    and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n                    With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to\r\n                    upload videos, manage playlists and subscriptions, update channel settings, and more.\r\n\r\n                </p>\r\n            </div>;\r\n        }\r\n    }\r\n    state = {\r\n        video: null,\r\n        ytplayer:null\r\n    }\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}