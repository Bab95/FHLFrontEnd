{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\babnishvyas\\\\Documents\\\\Work_Space\\\\fhl\\\\testyoutube\\\\Youtube-react-app\\\\src\\\\components\\\\VideoDetail.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\n\nvar VideoDetail = function VideoDetail(_ref) {\n  var video = _ref.video;\n\n  if (!video) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Enter search keyword to load...\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels. With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.\"));\n  }\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      player = _useState2[0],\n      setPlayer = _useState2[1];\n\n  useEffect(function () {\n    var tag = document.createElement(\"script\");\n    tag.src = \"https://www.youtube.com/iframe_api\";\n    tag.setAttribute(\"onload\", \"onYouTubeIframeReady()\");\n    var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    window.onYouTubeIframeReady = function () {\n      setPlayer(new window.YT.Player(\"player\", {\n        videoId: \"sGPrx9bjgC8\",\n        autoplay: true,\n        events: {\n          onReady: onPlayerReady\n        }\n      }));\n    };\n\n    function onPlayerReady(event) {\n      event.target.playVideo();\n    }\n  }, []);\n  var videoSrc = \"https://www.youtube.com/embed/\".concat(video.id.videoId);\n  console.log(typeof video);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui embed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: videoSrc,\n    allowFullScreen: true,\n    title: \"Video player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, video.snippet.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, video.snippet.description)));\n};\n\nexport default VideoDetail;","map":{"version":3,"sources":["C:\\Users\\babnishvyas\\Documents\\Work_Space\\fhl\\testyoutube\\Youtube-react-app\\src\\components\\VideoDetail.js"],"names":["React","useEffect","useState","VideoDetail","video","fontSize","player","setPlayer","tag","document","createElement","src","setAttribute","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","onYouTubeIframeReady","YT","Player","videoId","autoplay","events","onReady","onPlayerReady","event","target","playVideo","videoSrc","id","console","log","snippet","title","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,gCAAlC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAEjC,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6YAHI,CAAP;AAUD;;AAbgC,kBAeHH,QAAQ,EAfL;AAAA;AAAA,MAexBI,MAfwB;AAAA,MAehBC,SAfgB;;AAgB/BN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIO,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAF,IAAAA,GAAG,CAACG,GAAJ,GAAU,oCAAV;AACAH,IAAAA,GAAG,CAACI,YAAJ,CAAiB,QAAjB,EAA2B,wBAA3B;AACA,QAAIC,cAAc,GAAGJ,QAAQ,CAACK,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAArB;AACAD,IAAAA,cAAc,CAACE,UAAf,CAA0BC,YAA1B,CAAuCR,GAAvC,EAA4CK,cAA5C;;AAEAI,IAAAA,MAAM,CAACC,oBAAP,GAA8B,YAAY;AACtCX,MAAAA,SAAS,CACL,IAAIU,MAAM,CAACE,EAAP,CAAUC,MAAd,CAAqB,QAArB,EAA+B;AAC3BC,QAAAA,OAAO,EAAE,aADkB;AAE3BC,QAAAA,QAAQ,EAAE,IAFiB;AAI3BC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAEC;AADL;AAJmB,OAA/B,CADK,CAAT;AAUH,KAXD;;AAaA,aAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BA,MAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH;AACJ,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,MAAMC,QAAQ,2CAAoCzB,KAAK,CAAC0B,EAAN,CAAST,OAA7C,CAAd;AACFU,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAO5B,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,GAAG,EAAEyB,QAAb;AAAuB,IAAA,eAAe,MAAtC;AAAuC,IAAA,KAAK,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ,CADF,EAME;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BzB,KAAK,CAAC6B,OAAN,CAAcC,KAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI9B,KAAK,CAAC6B,OAAN,CAAcE,WAAlB,CAFF,CANF,CADF;AAaD,CAxDD;;AA0DA,eAAehC,WAAf","sourcesContent":["import React from \"react\";\r\nimport {useEffect, useState} from \"react/cjs/react.production.min\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n\r\n  if (!video) {\r\n    return <div>\r\n       <h1>Enter search keyword to load...</h1>\r\n       <br></br>\r\n       <p style={{fontSize:'25px'}}>\r\n       Use the API to search for videos matching specific search terms, topics, locations, publication dates, and much more. The APIs search.list method also supports searches for playlists and channels.\r\n\r\n       With the YouTube Data API, you can add a variety of YouTube features to your application. Use the API to upload videos, manage playlists and subscriptions, update channel settings, and more.        \r\n\r\n       </p>\r\n    </div>;\r\n  }\r\n\r\n    const [player, setPlayer] = useState();\r\n    useEffect(() => {\r\n        var tag = document.createElement(\"script\");\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n        tag.setAttribute(\"onload\", \"onYouTubeIframeReady()\");\r\n        var firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n        window.onYouTubeIframeReady = function () {\r\n            setPlayer(\r\n                new window.YT.Player(\"player\", {\r\n                    videoId: \"sGPrx9bjgC8\",\r\n                    autoplay: true,\r\n\r\n                    events: {\r\n                        onReady: onPlayerReady\r\n                    }\r\n                })\r\n            );\r\n        };\r\n\r\n        function onPlayerReady(event) {\r\n            event.target.playVideo();\r\n        }\r\n    }, []);\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n  console.log(typeof video);\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n          <div id=\"player\">\r\n            <iframe src={videoSrc} allowFullScreen title=\"Video player\" />\r\n          </div>\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n"]},"metadata":{},"sourceType":"module"}